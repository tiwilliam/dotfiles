filetype on
filetype plugin on
filetype plugin indent on

set t_Co=256
set encoding=utf-8
set laststatus=2
set directory=/tmp
set nocompatible
set ruler
set number
set hlsearch

" Make it fancy
syntax on
colorscheme ir_black_sg

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'scrooloose/syntastic'
Bundle 'Lokaltog/vim-powerline'
Bundle 'ctrlp.vim'
Bundle 'davidhalter/jedi-vim'
Bundle 'ervandew/supertab'
Bundle 'kevinw/pyflakes-vim'

" Ctrl-P shortcuts
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'
set wildignore+=*/src/coverage/*,*/tmp/*,*.so,*.swp,*.zip,*.pyc

" CMD+S saving
map <C-s> :w<CR>
imap <C-s> <Esc>:w<CR>i

" Highlight colors
highlight Search ctermbg=yellow ctermfg=black
highlight MarkError ctermbg=red

" Highlight suspicious stuff
match MarkError /[\x7f-\xff]/   " Broken chars
match MarkError /\s\+\%#\@<!$/  " Extra whitespace
match MarkError /\%80v.\+/      " 80 char limit

" 79 char limit
if exists('+colorcolumn')
  highlight ColorColumn ctermbg=0
  set colorcolumn=79
endif

" Remember cursor position
function! ResCur()
  if line("'\"") <= line("$")
    normal! g`"
    return 1
  endif
endfunction

autocmd BufWinEnter * call ResCur()

" Indent
set smarttab
set expandtab
set autoindent
set smartindent
set tabstop=4 softtabstop=4 shiftwidth=4

" Aliases
:command! W w

" TAB autocomplete
inoremap <Tab> <C-R>=Tab_Or_Complete()<CR>
function! Tab_Or_Complete()
  if col('.')>1 && strpart( getline('.'), col('.')-2, 3 ) =~ '^\w'
    return "\<C-N>"
  else
    return "\<Tab>"
  endif
endfunction

" Fix Home and End keys in 256color mode
if $TERM =~ '^screen-256color'
  map <Esc>OH <Home>
  map! <Esc>OH <Home>
  map <Esc>OF <End>
  map! <Esc>OF <End>
endif
